Terminals unused in grammar

   NOT
   AND
   OR


Rules useless in parser due to conflicts

   30 return_statement_optional: /* empty */


State 4 conflicts: 1 shift/reduce, 1 reduce/reduce
State 22 conflicts: 2 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 $@1: /* empty */

    2 program: $@1 statements_list

    3 statements_list: /* empty */
    4                | statements_list statement

    5 statement: functions_optional
    6          | var_declaration

    7 var_declaration: IDENTIFIER ASSIGNMENT expr
    8                | IDENTIFIER ASSIGNMENT NUMERIC
    9                | IDENTIFIER ASSIGNMENT INTEGER
   10                | IDENTIFIER ASSIGNMENT STRING
   11                | array_declaration

   12 expr: expr PLUS expr
   13     | expr MINUS expr
   14     | expr DIV expr
   15     | expr MUL expr
   16     | IDENTIFIER

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

   18 assigning_array_elements: CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN
   19                         | numeric_sequence

   20 numeric_sequence: NUMERIC COLON NUMERIC

   21 comma_separated_numbers: NUMERIC
   22                        | comma_separated_numbers COMMA NUMERIC

   23 functions_optional: function
   24                   | /* empty */

   25 function: function_head function_tail

   26 function_head: IDENTIFIER ASSIGNMENT FUNCTION_KEYWORD LEFT_PAREN parameters_optional RIGHT_PAREN

   27 function_tail: LEFT_BRACE function_body RIGHT_BRACE

   28 function_body: statements_list return_statement_optional

   29 return_statement_optional: return_statement
   30                          | /* empty */

   31 return_statement: RETURN_KEYWORD LEFT_PAREN IDENTIFIER RIGHT_PAREN

   32 parameters_optional: parameters
   33                    | /* empty */

   34 parameters: IDENTIFIER
   35           | parameters COMMA IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER (258) 9
NUMERIC (259) 8 20 21 22
STRING (260) 10
NOT (261)
AND (262)
OR (263)
DIV (264) 14
MUL (265) 15
MINUS (266) 13
PLUS (267) 12
EQ_ASSIGNMENT (268) 17
ASSIGNMENT (269) 7 8 9 10 17 26
IDENTIFIER (270) 7 8 9 10 16 17 26 31 34 35
ARRAY_KEYWORD (271) 17
COLON (272) 20
COMMA (273) 17 22 35
DIMENSION_KEYWORD (274) 17
CONCATENATE (275) 17 18
LEFT_PAREN (276) 17 18 26 31
RIGHT_PAREN (277) 17 18 26 31
LEFT_BRACE (278) 27
RIGHT_BRACE (279) 27
FUNCTION_KEYWORD (280) 26
RETURN_KEYWORD (281) 31


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 2, on right: 0
$@1 (29)
    on left: 1, on right: 2
statements_list (30)
    on left: 3 4, on right: 2 4 28
statement (31)
    on left: 5 6, on right: 4
var_declaration (32)
    on left: 7 8 9 10 11, on right: 6
expr (33)
    on left: 12 13 14 15 16, on right: 7 12 13 14 15
array_declaration (34)
    on left: 17, on right: 11
assigning_array_elements (35)
    on left: 18 19, on right: 17
numeric_sequence (36)
    on left: 20, on right: 19
comma_separated_numbers (37)
    on left: 21 22, on right: 17 18 22
functions_optional (38)
    on left: 23 24, on right: 5
function (39)
    on left: 25, on right: 23
function_head (40)
    on left: 26, on right: 25
function_tail (41)
    on left: 27, on right: 25
function_body (42)
    on left: 28, on right: 27
return_statement_optional (43)
    on left: 29 30, on right: 28
return_statement (44)
    on left: 31, on right: 29
parameters_optional (45)
    on left: 32 33, on right: 26
parameters (46)
    on left: 34 35, on right: 32 35


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


state 1

    0 $accept: program . $end

    $end  shift, and go to state 3


state 2

    2 program: $@1 . statements_list

    $default  reduce using rule 3 (statements_list)

    statements_list  go to state 4


state 3

    0 $accept: program $end .

    $default  accept


state 4

    2 program: $@1 statements_list .
    4 statements_list: statements_list . statement

    IDENTIFIER  shift, and go to state 5

    $end        reduce using rule 2 (program)
    $end        [reduce using rule 24 (functions_optional)]
    IDENTIFIER  [reduce using rule 24 (functions_optional)]
    $default    reduce using rule 2 (program)

    statement           go to state 6
    var_declaration     go to state 7
    array_declaration   go to state 8
    functions_optional  go to state 9
    function            go to state 10
    function_head       go to state 11


state 5

    7 var_declaration: IDENTIFIER . ASSIGNMENT expr
    8                | IDENTIFIER . ASSIGNMENT NUMERIC
    9                | IDENTIFIER . ASSIGNMENT INTEGER
   10                | IDENTIFIER . ASSIGNMENT STRING
   17 array_declaration: IDENTIFIER . ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN
   26 function_head: IDENTIFIER . ASSIGNMENT FUNCTION_KEYWORD LEFT_PAREN parameters_optional RIGHT_PAREN

    ASSIGNMENT  shift, and go to state 12


state 6

    4 statements_list: statements_list statement .

    $default  reduce using rule 4 (statements_list)


state 7

    6 statement: var_declaration .

    $default  reduce using rule 6 (statement)


state 8

   11 var_declaration: array_declaration .

    $default  reduce using rule 11 (var_declaration)


state 9

    5 statement: functions_optional .

    $default  reduce using rule 5 (statement)


state 10

   23 functions_optional: function .

    $default  reduce using rule 23 (functions_optional)


state 11

   25 function: function_head . function_tail

    LEFT_BRACE  shift, and go to state 13

    function_tail  go to state 14


state 12

    7 var_declaration: IDENTIFIER ASSIGNMENT . expr
    8                | IDENTIFIER ASSIGNMENT . NUMERIC
    9                | IDENTIFIER ASSIGNMENT . INTEGER
   10                | IDENTIFIER ASSIGNMENT . STRING
   17 array_declaration: IDENTIFIER ASSIGNMENT . ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN
   26 function_head: IDENTIFIER ASSIGNMENT . FUNCTION_KEYWORD LEFT_PAREN parameters_optional RIGHT_PAREN

    INTEGER           shift, and go to state 15
    NUMERIC           shift, and go to state 16
    STRING            shift, and go to state 17
    IDENTIFIER        shift, and go to state 18
    ARRAY_KEYWORD     shift, and go to state 19
    FUNCTION_KEYWORD  shift, and go to state 20

    expr  go to state 21


state 13

   27 function_tail: LEFT_BRACE . function_body RIGHT_BRACE

    $default  reduce using rule 3 (statements_list)

    statements_list  go to state 22
    function_body    go to state 23


state 14

   25 function: function_head function_tail .

    $default  reduce using rule 25 (function)


state 15

    9 var_declaration: IDENTIFIER ASSIGNMENT INTEGER .

    $default  reduce using rule 9 (var_declaration)


state 16

    8 var_declaration: IDENTIFIER ASSIGNMENT NUMERIC .

    $default  reduce using rule 8 (var_declaration)


state 17

   10 var_declaration: IDENTIFIER ASSIGNMENT STRING .

    $default  reduce using rule 10 (var_declaration)


state 18

   16 expr: IDENTIFIER .

    $default  reduce using rule 16 (expr)


state 19

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD . LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 24


state 20

   26 function_head: IDENTIFIER ASSIGNMENT FUNCTION_KEYWORD . LEFT_PAREN parameters_optional RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 25


state 21

    7 var_declaration: IDENTIFIER ASSIGNMENT expr .
   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . DIV expr
   15     | expr . MUL expr

    DIV    shift, and go to state 26
    MUL    shift, and go to state 27
    MINUS  shift, and go to state 28
    PLUS   shift, and go to state 29

    $default  reduce using rule 7 (var_declaration)


state 22

    4 statements_list: statements_list . statement
   28 function_body: statements_list . return_statement_optional

    IDENTIFIER      shift, and go to state 5
    RETURN_KEYWORD  shift, and go to state 30

    IDENTIFIER      [reduce using rule 24 (functions_optional)]
    RIGHT_BRACE     reduce using rule 24 (functions_optional)
    RIGHT_BRACE     [reduce using rule 30 (return_statement_optional)]
    RETURN_KEYWORD  [reduce using rule 24 (functions_optional)]
    $default        reduce using rule 24 (functions_optional)

    statement                  go to state 6
    var_declaration            go to state 7
    array_declaration          go to state 8
    functions_optional         go to state 9
    function                   go to state 10
    function_head              go to state 11
    return_statement_optional  go to state 31
    return_statement           go to state 32


state 23

   27 function_tail: LEFT_BRACE function_body . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 33


state 24

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN . assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

    NUMERIC      shift, and go to state 34
    CONCATENATE  shift, and go to state 35

    assigning_array_elements  go to state 36
    numeric_sequence          go to state 37


state 25

   26 function_head: IDENTIFIER ASSIGNMENT FUNCTION_KEYWORD LEFT_PAREN . parameters_optional RIGHT_PAREN

    IDENTIFIER  shift, and go to state 38

    $default  reduce using rule 33 (parameters_optional)

    parameters_optional  go to state 39
    parameters           go to state 40


state 26

   14 expr: expr DIV . expr

    IDENTIFIER  shift, and go to state 18

    expr  go to state 41


state 27

   15 expr: expr MUL . expr

    IDENTIFIER  shift, and go to state 18

    expr  go to state 42


state 28

   13 expr: expr MINUS . expr

    IDENTIFIER  shift, and go to state 18

    expr  go to state 43


state 29

   12 expr: expr PLUS . expr

    IDENTIFIER  shift, and go to state 18

    expr  go to state 44


state 30

   31 return_statement: RETURN_KEYWORD . LEFT_PAREN IDENTIFIER RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 45


state 31

   28 function_body: statements_list return_statement_optional .

    $default  reduce using rule 28 (function_body)


state 32

   29 return_statement_optional: return_statement .

    $default  reduce using rule 29 (return_statement_optional)


state 33

   27 function_tail: LEFT_BRACE function_body RIGHT_BRACE .

    $default  reduce using rule 27 (function_tail)


state 34

   20 numeric_sequence: NUMERIC . COLON NUMERIC

    COLON  shift, and go to state 46


state 35

   18 assigning_array_elements: CONCATENATE . LEFT_PAREN comma_separated_numbers RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 47


state 36

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements . COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

    COMMA  shift, and go to state 48


state 37

   19 assigning_array_elements: numeric_sequence .

    $default  reduce using rule 19 (assigning_array_elements)


state 38

   34 parameters: IDENTIFIER .

    $default  reduce using rule 34 (parameters)


state 39

   26 function_head: IDENTIFIER ASSIGNMENT FUNCTION_KEYWORD LEFT_PAREN parameters_optional . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 49


state 40

   32 parameters_optional: parameters .
   35 parameters: parameters . COMMA IDENTIFIER

    COMMA  shift, and go to state 50

    $default  reduce using rule 32 (parameters_optional)


state 41

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . DIV expr
   14     | expr DIV expr .
   15     | expr . MUL expr

    MINUS  shift, and go to state 28
    PLUS   shift, and go to state 29

    $default  reduce using rule 14 (expr)


state 42

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   14     | expr . DIV expr
   15     | expr . MUL expr
   15     | expr MUL expr .

    MINUS  shift, and go to state 28
    PLUS   shift, and go to state 29

    $default  reduce using rule 15 (expr)


state 43

   12 expr: expr . PLUS expr
   13     | expr . MINUS expr
   13     | expr MINUS expr .
   14     | expr . DIV expr
   15     | expr . MUL expr

    $default  reduce using rule 13 (expr)


state 44

   12 expr: expr . PLUS expr
   12     | expr PLUS expr .
   13     | expr . MINUS expr
   14     | expr . DIV expr
   15     | expr . MUL expr

    $default  reduce using rule 12 (expr)


state 45

   31 return_statement: RETURN_KEYWORD LEFT_PAREN . IDENTIFIER RIGHT_PAREN

    IDENTIFIER  shift, and go to state 51


state 46

   20 numeric_sequence: NUMERIC COLON . NUMERIC

    NUMERIC  shift, and go to state 52


state 47

   18 assigning_array_elements: CONCATENATE LEFT_PAREN . comma_separated_numbers RIGHT_PAREN

    NUMERIC  shift, and go to state 53

    comma_separated_numbers  go to state 54


state 48

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA . DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

    DIMENSION_KEYWORD  shift, and go to state 55


state 49

   26 function_head: IDENTIFIER ASSIGNMENT FUNCTION_KEYWORD LEFT_PAREN parameters_optional RIGHT_PAREN .

    $default  reduce using rule 26 (function_head)


state 50

   35 parameters: parameters COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 56


state 51

   31 return_statement: RETURN_KEYWORD LEFT_PAREN IDENTIFIER . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 57


state 52

   20 numeric_sequence: NUMERIC COLON NUMERIC .

    $default  reduce using rule 20 (numeric_sequence)


state 53

   21 comma_separated_numbers: NUMERIC .

    $default  reduce using rule 21 (comma_separated_numbers)


state 54

   18 assigning_array_elements: CONCATENATE LEFT_PAREN comma_separated_numbers . RIGHT_PAREN
   22 comma_separated_numbers: comma_separated_numbers . COMMA NUMERIC

    COMMA        shift, and go to state 58
    RIGHT_PAREN  shift, and go to state 59


state 55

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD . EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

    EQ_ASSIGNMENT  shift, and go to state 60


state 56

   35 parameters: parameters COMMA IDENTIFIER .

    $default  reduce using rule 35 (parameters)


state 57

   31 return_statement: RETURN_KEYWORD LEFT_PAREN IDENTIFIER RIGHT_PAREN .

    $default  reduce using rule 31 (return_statement)


state 58

   22 comma_separated_numbers: comma_separated_numbers COMMA . NUMERIC

    NUMERIC  shift, and go to state 61


state 59

   18 assigning_array_elements: CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN .

    $default  reduce using rule 18 (assigning_array_elements)


state 60

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT . CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

    CONCATENATE  shift, and go to state 62


state 61

   22 comma_separated_numbers: comma_separated_numbers COMMA NUMERIC .

    $default  reduce using rule 22 (comma_separated_numbers)


state 62

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE . LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 63


state 63

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN . comma_separated_numbers RIGHT_PAREN RIGHT_PAREN

    NUMERIC  shift, and go to state 53

    comma_separated_numbers  go to state 64


state 64

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers . RIGHT_PAREN RIGHT_PAREN
   22 comma_separated_numbers: comma_separated_numbers . COMMA NUMERIC

    COMMA        shift, and go to state 58
    RIGHT_PAREN  shift, and go to state 65


state 65

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 66


state 66

   17 array_declaration: IDENTIFIER ASSIGNMENT ARRAY_KEYWORD LEFT_PAREN assigning_array_elements COMMA DIMENSION_KEYWORD EQ_ASSIGNMENT CONCATENATE LEFT_PAREN comma_separated_numbers RIGHT_PAREN RIGHT_PAREN .

    $default  reduce using rule 17 (array_declaration)
